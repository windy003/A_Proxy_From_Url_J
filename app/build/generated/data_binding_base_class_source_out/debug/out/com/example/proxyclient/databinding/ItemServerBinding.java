// Generated by view binder compiler. Do not edit!
package com.example.proxyclient.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.proxyclient.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemServerBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView menuIcon;

  @NonNull
  public final TextView serverAddress;

  @NonNull
  public final TextView serverInfo;

  @NonNull
  public final TextView serverName;

  @NonNull
  public final ImageView statusIcon;

  private ItemServerBinding(@NonNull CardView rootView, @NonNull ImageView menuIcon,
      @NonNull TextView serverAddress, @NonNull TextView serverInfo, @NonNull TextView serverName,
      @NonNull ImageView statusIcon) {
    this.rootView = rootView;
    this.menuIcon = menuIcon;
    this.serverAddress = serverAddress;
    this.serverInfo = serverInfo;
    this.serverName = serverName;
    this.statusIcon = statusIcon;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemServerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemServerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_server, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemServerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.menu_icon;
      ImageView menuIcon = ViewBindings.findChildViewById(rootView, id);
      if (menuIcon == null) {
        break missingId;
      }

      id = R.id.server_address;
      TextView serverAddress = ViewBindings.findChildViewById(rootView, id);
      if (serverAddress == null) {
        break missingId;
      }

      id = R.id.server_info;
      TextView serverInfo = ViewBindings.findChildViewById(rootView, id);
      if (serverInfo == null) {
        break missingId;
      }

      id = R.id.server_name;
      TextView serverName = ViewBindings.findChildViewById(rootView, id);
      if (serverName == null) {
        break missingId;
      }

      id = R.id.status_icon;
      ImageView statusIcon = ViewBindings.findChildViewById(rootView, id);
      if (statusIcon == null) {
        break missingId;
      }

      return new ItemServerBinding((CardView) rootView, menuIcon, serverAddress, serverInfo,
          serverName, statusIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
